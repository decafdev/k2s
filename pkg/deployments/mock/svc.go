// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/techdecaf/k2s/v2/pkg/deployments (interfaces: DeploymentSrv)

// Package mock_depl_srv is a generated GoMock package.
package mock_depl_srv

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	state "github.com/techdecaf/k2s/v2/pkg/state"
	v1 "k8s.io/api/core/v1"
)

// MockDeploymentSrv is a mock of DeploymentSrv interface.
type MockDeploymentSrv struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentSrvMockRecorder
}

// MockDeploymentSrvMockRecorder is the mock recorder for MockDeploymentSrv.
type MockDeploymentSrvMockRecorder struct {
	mock *MockDeploymentSrv
}

// NewMockDeploymentSrv creates a new mock instance.
func NewMockDeploymentSrv(ctrl *gomock.Controller) *MockDeploymentSrv {
	mock := &MockDeploymentSrv{ctrl: ctrl}
	mock.recorder = &MockDeploymentSrvMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeploymentSrv) EXPECT() *MockDeploymentSrvMockRecorder {
	return m.recorder
}

// CreateDeployment mocks base method.
func (m *MockDeploymentSrv) CreateDeployment(arg0 *state.DeploymentDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDeployment", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDeployment indicates an expected call of CreateDeployment.
func (mr *MockDeploymentSrvMockRecorder) CreateDeployment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDeployment", reflect.TypeOf((*MockDeploymentSrv)(nil).CreateDeployment), arg0)
}

// ListDeployments mocks base method.
func (m *MockDeploymentSrv) ListDeployments() ([]state.DeploymentStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDeployments")
	ret0, _ := ret[0].([]state.DeploymentStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDeployments indicates an expected call of ListDeployments.
func (mr *MockDeploymentSrvMockRecorder) ListDeployments() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDeployments", reflect.TypeOf((*MockDeploymentSrv)(nil).ListDeployments))
}

// ListNamespaces mocks base method.
func (m *MockDeploymentSrv) ListNamespaces() ([]v1.Namespace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNamespaces")
	ret0, _ := ret[0].([]v1.Namespace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNamespaces indicates an expected call of ListNamespaces.
func (mr *MockDeploymentSrvMockRecorder) ListNamespaces() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNamespaces", reflect.TypeOf((*MockDeploymentSrv)(nil).ListNamespaces))
}
